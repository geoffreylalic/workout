// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int    @id @default(autoincrement())
  email     String @unique
  firstName String
  lastName  String
  password  String

  Workout  Workout[]
  Exercice Exercice[]
  Set      Set[]
}

model Workout {
  id         Int        @id @default(autoincrement())
  name       String
  createdAt  DateTime? @default(now())
  startedAt  DateTime?
  finishedAt DateTime?
  exercices  Exercice[]
  createdBy  User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     Int
}

model Exercice {
  id        Int       @id @default(autoincrement())
  name      String
  sets      Set[]
  workout   Workout   @relation(fields: [workoutId], references: [id], onDelete: Cascade)
  workoutId Int
  createdBy User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
}

model Set {
  id          Int      @id @default(autoincrement())
  repetitions Int?
  weight      Int?
  rest        DateTime?
  exercice    Exercice @relation(fields: [exerciceId], references: [id], onDelete: Cascade)
  exerciceId  Int
  createdBy   User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int
}
